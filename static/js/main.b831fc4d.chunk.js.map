{"version":3,"sources":["components/Bar.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","App.js","index.js"],"names":["Bar","props","style","length","className","height","swap","array","indexA","indexB","temp","bubbleSort","arraySteps","i","j","push","slice","merge","arrayA","arrayB","position","arrayNew","shift","insertStep","concat","currentStep","splice","mergeSort","mid","quickSort","steps","copy","console","log","App","state","timeouts","algorithm","barCount","delay","handleStart","run","changeAlgorithm","event","clearTimeouts","setState","target","value","changeDelay","parseInt","forEach","timeout","clearTimeout","generateBars","barsTemp","Math","floor","random","this","map","step","setTimeout","barsDiv","index","key","FormControl","FormLabel","RadioGroup","name","onChange","FormControlLabel","control","Radio","label","e","Button","variant","color","onClick","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b831fc4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Bar.css\"\r\n\r\nfunction Bar(props) {\r\n  let style = props.length;\r\n  return (\r\n    <div className=\"bar\" style={{ height: style }} ></div>\r\n  )\r\n}\r\n\r\nexport default Bar;","const bubbleSort = (array) => {\r\n  let arraySteps = [];\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        array = swap(array, j, j + 1);\r\n      }\r\n      arraySteps.push(array.slice());\r\n    }\r\n  }\r\n  return arraySteps;\r\n}\r\n\r\nfunction swap(array, indexA, indexB) {\r\n  let temp = array[indexA];\r\n  array[indexA] = array[indexB];\r\n  array[indexB] = temp;\r\n  return array;\r\n}\r\n\r\nexport default bubbleSort;","function mergeSort(array, position, arraySteps) {\r\n  if (array.length === 1) return array;\r\n\r\n  let mid = array.length / 2;\r\n  let arrayNew;\r\n\r\n  let arrayA = mergeSort(array.slice(0, mid), position, arraySteps);\r\n  let arrayB = mergeSort(array.slice(mid), position + mid, arraySteps);\r\n\r\n  arrayNew = merge(arrayA, arrayB, position, arraySteps);\r\n\r\n  return arrayNew;\r\n}\r\n\r\nconst merge = (arrayA, arrayB, position, arraySteps) => {\r\n  let arrayNew = [];\r\n  let A = 0;\r\n  let B = 0;\r\n\r\n  while (arrayA.length > 0 && arrayB.length > 0) {\r\n    if (arrayA[A] < arrayB[B]) {\r\n      arrayNew.push(arrayA.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    } else {\r\n      arrayNew.push(arrayB.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    }\r\n  }\r\n  if (arrayA.length !== 0) arrayNew = arrayNew.concat(arrayA);\r\n  if (arrayB.length !== 0) arrayNew = arrayNew.concat(arrayB);\r\n  insertStep(arrayNew, position, arraySteps);\r\n\r\n  return arrayNew;\r\n}\r\n\r\nconst insertStep = (arrayNew, position, arraySteps) => {\r\n  let currentStep = arraySteps[arraySteps.length - 1].slice();\r\n  currentStep.splice(position, arrayNew.length, ...arrayNew);\r\n  arraySteps.push(currentStep);\r\n}\r\n\r\nexport default mergeSort;","const quickSort = (array, steps, i) => {\r\n  // if (array.length === 1) return;\r\n  // let mid = array.length / 2;\r\n\r\n  // steps.push(array);\r\n  // if (i > 0) quickSort(array.slice(0, mid), steps, --i);\r\n  let arrayNew = [1, 2, 3];\r\n  const copy = array.slice();\r\n  console.log(copy);\r\n  copy.splice(0, arrayNew.length, ...arrayNew);\r\n  console.log(copy);\r\n}\r\n\r\nexport default quickSort;","import React from 'react';\nimport { Button, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\nimport Bar from './components/Bar';\n\n// style\nimport './App.css';\n\n// algorithms\nimport bubbleSort from './algorithms/bubbleSort';\nimport mergeSort from './algorithms/mergeSort';\nimport quickSort from './algorithms/quickSort';\n\nclass App extends React.Component {\n  state = {\n    array: [],\n    timeouts: [],\n    algorithm: 'Bubble Sort',\n    barCount: 8,\n    delay: 96,\n  }\n\n  handleStart = () => {\n    if (this.state.algorithm === 'Bubble Sort') {\n      let arraySteps = bubbleSort(this.state.array);\n\n      this.run(arraySteps);\n    }\n    if (this.state.algorithm === 'Merge Sort') {\n      let arraySteps = [];\n      arraySteps.push(this.state.array.slice());\n\n      mergeSort(this.state.array.slice(), 0, arraySteps);\n      this.run(arraySteps);\n    }\n    if (this.state.algorithm === 'Quick Sort') {\n      let steps = [];\n      quickSort(this.state.array, steps, 8);\n      console.log(steps);\n    }\n  }\n\n  run(array) {\n    this.clearTimeouts();\n    let timeouts = [];\n\n    array.map((step, i) => {\n      let timeout = setTimeout(() => {\n        this.setState({\n          array: step,\n        })\n      }, this.state.delay * i);\n      timeouts.push(timeout);\n    });\n\n    this.setState({\n      timeouts: timeouts,\n    });\n  }\n\n  changeAlgorithm = (event) => {\n    this.clearTimeouts();\n    this.setState({\n      algorithm: event.target.value,\n    });\n  };\n\n  changeDelay = (event) => {\n    this.clearTimeouts();\n    this.setState({\n      delay: parseInt(event.target.value),\n    });\n  };\n\n  clearTimeouts = () => {\n    this.state.timeouts.forEach(timeout => clearTimeout(timeout));\n  }\n\n  generateBars = (barCount) => {\n    this.clearTimeouts();\n    let barsTemp = [];\n    for (let i = 0; i < barCount; i++) {\n      barsTemp.push(Math.floor(Math.random() * 90) + 10);\n    }\n    this.setState({\n      array: barsTemp,\n      barCount: parseInt(barCount),\n    });\n  }\n\n  componentDidMount() {\n    this.generateBars(this.state.barCount);\n  }\n\n  render() {\n    let barsDiv = this.state.array.map((value, index) => <Bar key={index} length={value} />);\n\n    return (\n      <div className=\"App\">\n        <FormControl>\n          <FormLabel>Algorithm</FormLabel>\n          <RadioGroup name=\"algorithms\" value={this.state.algorithm} onChange={this.changeAlgorithm}>\n            <FormControlLabel value=\"Bubble Sort\" control={<Radio />} label=\"Bubble Sort\" />\n            <FormControlLabel value=\"Merge Sort\" control={<Radio />} label=\"Merge Sort\" />\n            <FormControlLabel value=\"Quick Sort\" control={<Radio />} label=\"Quick Sort\" />\n          </RadioGroup>\n\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>Array size</FormLabel>\n          <RadioGroup name=\"barcounts\" value={this.state.barCount} onChange={e => this.generateBars(e.target.value)}>\n            <FormControlLabel value={8} control={<Radio />} label=\"8 items\" />\n            <FormControlLabel value={16} control={<Radio />} label=\"16 items\" />\n            <FormControlLabel value={32} control={<Radio />} label=\"32 items\" />\n          </RadioGroup>\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>Speed</FormLabel>\n          <RadioGroup name=\"delay\" value={this.state.delay} onChange={this.changeDelay}>\n            <FormControlLabel value={96} control={<Radio />} label=\"1x\" />\n            <FormControlLabel value={48} control={<Radio />} label=\"2x\" />\n            <FormControlLabel value={24} control={<Radio />} label=\"4x\" />\n          </RadioGroup>\n        </FormControl>\n\n        <div>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => this.generateBars(this.state.barCount)}>Reset</Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleStart()}>Start</Button>\n        </div>\n        <div className=\"container\">\n          {barsDiv}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}