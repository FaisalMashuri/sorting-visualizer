{"version":3,"sources":["components/Bar.js","components/Form.js","algorithms/helpers.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","App.js","index.js"],"names":["Bar","style","height","length","backgroundColor","color","className","Form","formLabel","values","labels","currentValue","onChange","FormControl","FormLabel","RadioGroup","value","map","index","FormControlLabel","key","control","Radio","label","swap","array","indexA","indexB","temp","insertStep","arrayNew","position","arraySteps","currentStep","slice","splice","push","bubbleSort","colorSteps","colorKey","i","j","Array","fill","merge","arrayA","arrayB","shift","updateColor","concat","start","mergeSort","mid","Math","floor","quickSort","A","B","C","middleValue","sort","indexOf","pickPivot","pivot","bigIndex","max","App","state","timeouts","algorithm","barCount","delay","ALGO_SET","handleStart","steps","setState","run","stepBack","clearTimeouts","stepForward","changeAlgorithm","event","target","clearColorKey","changeDelay","parseInt","forEach","timeout","clearTimeout","blankKey","generateBars","barsTemp","random","this","setTimeout","playButton","barsDiv","IconButton","onClick","Pause","PlayArrow","RotateLeft","SkipPrevious","SkipNext","e","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ee285f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Bar.css\"\r\n\r\nfunction Bar({ length, color }) {\r\n  let style = {\r\n    height: length,\r\n    backgroundColor: color ? \"green\" : \"grey\",\r\n  }\r\n\r\n  return (\r\n    <div className=\"bar\" style={style} ></div>\r\n  )\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nexport default function Form({ formLabel, values, labels, currentValue, onChange }) {\r\n  return (\r\n    <div className=\"card container-small\">\r\n      <FormControl>\r\n        <FormLabel>{formLabel}</FormLabel>\r\n        <RadioGroup value={currentValue} onChange={onChange}>\r\n          {values.map((value, index) => {\r\n            return (<FormControlLabel\r\n              key={`${value}_${index}`}\r\n              value={values[index]}\r\n              control={<Radio />}\r\n              label={labels[index]} />);\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","\r\nexport function swap(array, indexA, indexB) {\r\n  let temp = array[indexA];\r\n  array[indexA] = array[indexB];\r\n  array[indexB] = temp;\r\n  return array;\r\n}\r\n\r\nexport function insertStep(arrayNew, position, arraySteps) {\r\n  let currentStep = arraySteps[arraySteps.length - 1].slice();\r\n  currentStep.splice(position, arrayNew.length, ...arrayNew);\r\n  arraySteps.push(currentStep);\r\n}","import { swap } from './helpers';\r\n\r\nconst bubbleSort = (array, position, arraySteps, colorSteps) => {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        array = swap(array, j, j + 1);\r\n      }\r\n      arraySteps.push(array.slice());\r\n      colorSteps.push(colorKey.slice());\r\n\r\n    }\r\n    colorKey[array.length - 1 - i] = true;\r\n    arraySteps.push(array.slice());\r\n    colorSteps.push(colorKey.slice());\r\n  }\r\n\r\n  // Remaining bars become green\r\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(true);\r\n  return;\r\n}\r\n\r\nexport default bubbleSort;","import { insertStep } from './helpers';\r\n\r\nfunction mergeSort(array, position, arraySteps, colorSteps) {\r\n  if (array.length === 1) return array;\r\n  let mid = Math.floor(array.length / 2);\r\n\r\n  // Split and work recursively\r\n  let arrayA = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\r\n  let arrayB = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\r\n\r\n  return merge(arrayA, arrayB, position, arraySteps, colorSteps);\r\n}\r\n\r\nconst merge = (arrayA, arrayB, position, arraySteps, colorSteps) => {\r\n  let arrayNew = [];\r\n  let A = 0;\r\n  let B = 0;\r\n\r\n  while (arrayA.length > 0 && arrayB.length > 0) {\r\n    if (arrayA[A] < arrayB[B]) {\r\n      arrayNew.push(arrayA.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    } else {\r\n      arrayNew.push(arrayB.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    }\r\n    updateColor(position, colorSteps, arrayNew.length - 1, [0], []);\r\n  }\r\n\r\n  // concatenate remaining values\r\n  updateColor(position, colorSteps, arrayNew.length, arrayA, arrayB);\r\n  if (arrayA.length !== 0) arrayNew = arrayNew.concat(arrayA);\r\n  if (arrayB.length !== 0) arrayNew = arrayNew.concat(arrayB);\r\n  insertStep(arrayNew, position, arraySteps);\r\n\r\n  return arrayNew;\r\n}\r\n\r\nfunction updateColor(position, colorSteps, start, arrayA, arrayB) {\r\n  if (position === 0) {\r\n    // if sorted from the front, mark changed elements to be green\r\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n    colorKey.fill(true, start, start + arrayA.length + arrayB.length);\r\n    colorSteps.push(colorKey);\r\n  } else {\r\n    // or duplicate previous step\r\n    colorSteps.push(colorSteps[colorSteps.length - 1].slice());\r\n  }\r\n}\r\n\r\nexport default mergeSort;","import { swap, insertStep } from './helpers';\r\n\r\nconst quickSort = (array, position, arraySteps, colorSteps) => {\r\n  if (array.length < 2) {\r\n    insertStep(array, position, arraySteps);\r\n\r\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n    colorKey[position] = true;\r\n    colorSteps.push(colorKey);\r\n    return;\r\n  }\r\n\r\n  // pick median of three numbers as pivot and sent it to back\r\n  swap(array, pickPivot(array), array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice());\r\n\r\n  let pivot = array[array.length - 1];\r\n  let A = 0;\r\n  let B = array.length - 1;\r\n\r\n  // swap small value from right with big value from left\r\n  while (A < B) {\r\n    while (array[A] < pivot) A++;\r\n    while (array[B] >= pivot) B--;\r\n    if (A < B) {\r\n      swap(array, A, B);\r\n      insertStep(array, position, arraySteps);\r\n      colorSteps.push(colorSteps[colorSteps.length - 1].slice());\r\n    }\r\n  }\r\n\r\n  // swap big value with pivot\r\n  let bigIndex = Math.max(A, B);\r\n\r\n  swap(array, bigIndex, array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  colorKey[position + bigIndex] = true;\r\n  colorSteps.push(colorKey);\r\n\r\n  // recurse on two halves\r\n  quickSort(array.slice(0, A), position, arraySteps, colorSteps);\r\n  quickSort(array.slice(A + 1), position + A + 1, arraySteps, colorSteps);\r\n\r\n  return;\r\n}\r\n\r\nfunction pickPivot(array) {\r\n  let A = array[0];\r\n  let B = array[Math.floor(array.length / 2)];\r\n  let C = array[array.length - 1];\r\n\r\n  let middleValue = [A, B, C].sort()[1];\r\n  let middleIndex = array.indexOf(middleValue);\r\n\r\n  return middleIndex;\r\n}\r\n\r\nexport default quickSort;","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { PlayArrow, Pause, SkipPrevious, SkipNext, RotateLeft } from '@material-ui/icons';\r\nimport Bar from './components/Bar';\r\nimport Form from './components/Form';\r\n\r\n// style\r\nimport './App.css';\r\n\r\n// algorithms\r\nimport bubbleSort from './algorithms/bubbleSort';\r\nimport mergeSort from './algorithms/mergeSort';\r\nimport quickSort from './algorithms/quickSort';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    array: [],\r\n    colorKey: [],\r\n    arraySteps: [],\r\n    colorSteps: [],\r\n    currentStep: 0,\r\n    timeouts: [],\r\n    algorithm: 'Bubble Sort',\r\n    barCount: 25,\r\n    delay: 64,\r\n  }\r\n\r\n  ALGO_SET = {\r\n    'Bubble Sort': bubbleSort,\r\n    'Merge Sort': mergeSort,\r\n    'Quick Sort': quickSort,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateBars(this.state.barCount);\r\n  }\r\n\r\n  handleStart = () => {\r\n    let array = this.state.array.slice();\r\n    let steps = this.state.arraySteps.slice();\r\n    let colorSteps = this.state.colorSteps.slice();\r\n\r\n    this.ALGO_SET[this.state.algorithm](array, 0, steps, colorSteps);\r\n\r\n    this.setState({\r\n      arraySteps: steps,\r\n      colorSteps: colorSteps,\r\n    });\r\n    this.run(steps, colorSteps);\r\n  }\r\n\r\n  run(steps, colorSteps) {\r\n    this.clearTimeouts();\r\n    let timeouts = [];\r\n    let i = 0;\r\n\r\n    while (i < steps.length - this.state.currentStep) {\r\n      let timeout = setTimeout(() => {\r\n        let currentStep = this.state.currentStep;\r\n        this.setState({\r\n          array: steps[currentStep],\r\n          colorKey: colorSteps[currentStep],\r\n          currentStep: currentStep + 1,\r\n        });\r\n      }, this.state.delay * (i));\r\n      timeouts.push(timeout);\r\n      i++;\r\n    }\r\n\r\n    this.setState({\r\n      timeouts: timeouts,\r\n    });\r\n  }\r\n\r\n  stepBack = () => {\r\n    if (this.state.currentStep === 0) return;\r\n    this.clearTimeouts();\r\n\r\n    let currentStep = this.state.currentStep - 1;\r\n    this.setState({\r\n      array: this.state.arraySteps[currentStep],\r\n      colorKey: this.state.colorSteps[currentStep],\r\n      currentStep: currentStep,\r\n    });\r\n  }\r\n\r\n  stepForward = () => {\r\n    if (this.state.currentStep === this.state.arraySteps.length) return;\r\n    this.clearTimeouts();\r\n\r\n    let currentStep = this.state.currentStep + 1;\r\n    this.setState({\r\n      array: this.state.arraySteps[currentStep],\r\n      colorKey: this.state.colorSteps[currentStep],\r\n      currentStep: currentStep,\r\n    });\r\n  }\r\n\r\n  changeAlgorithm = (event) => {\r\n    this.setState({\r\n      algorithm: event.target.value,\r\n      currentStep: 0,\r\n      arraySteps: [this.state.arraySteps[this.state.arraySteps.length - 1]],\r\n    });\r\n    this.clearTimeouts();\r\n    this.clearColorKey();\r\n  };\r\n\r\n  changeDelay = (event) => {\r\n    this.clearTimeouts();\r\n    this.setState({\r\n      delay: parseInt(event.target.value),\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeouts.forEach(timeout => clearTimeout(timeout));\r\n    this.setState({\r\n      timeouts: [],\r\n    })\r\n  }\r\n\r\n  clearColorKey = () => {\r\n    let blankKey = new Array(this.state.barCount).fill(false);\r\n    this.setState({\r\n      colorKey: blankKey,\r\n      colorSteps: [blankKey],\r\n    });\r\n  }\r\n\r\n  generateBars = (barCount) => {\r\n    this.clearTimeouts();\r\n    this.clearColorKey();\r\n\r\n    barCount = parseInt(barCount);\r\n    let barsTemp = [];\r\n\r\n    for (let i = 0; i < barCount; i++) {\r\n      barsTemp.push(Math.floor(Math.random() * 90) + 10);\r\n    }\r\n\r\n    this.setState({\r\n      array: barsTemp,\r\n      arraySteps: [barsTemp],\r\n      barCount: barCount,\r\n      currentStep: 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let barsDiv = this.state.array.map((value, index) => <Bar\r\n      key={index}\r\n      length={value}\r\n      color={this.state.colorKey[index]}\r\n    />);\r\n    let playButton;\r\n\r\n    // Set player controls\r\n    if (this.state.timeouts.length !== 0 && this.state.currentStep !== this.state.arraySteps.length - 1) {\r\n      playButton = (\r\n        <IconButton onClick={() => this.clearTimeouts()} >\r\n          <Pause />\r\n        </IconButton>\r\n      );\r\n    } else if (this.state.arraySteps.length > 2) {\r\n      playButton = (\r\n        <IconButton color=\"secondary\" onClick={() => this.run(this.state.arraySteps, this.state.colorSteps)} >\r\n          <PlayArrow />\r\n        </IconButton>);\r\n    } else {\r\n      playButton = (\r\n        <IconButton color=\"secondary\" onClick={() => this.handleStart()} >\r\n          <PlayArrow />\r\n        </IconButton>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <section className=\"bars container card\">\r\n          {barsDiv}\r\n        </section>\r\n\r\n        <section className=\"container-small\">\r\n          <IconButton onClick={() => this.generateBars(this.state.barCount)} >\r\n            <RotateLeft />\r\n          </IconButton>\r\n          <IconButton onClick={this.stepBack} >\r\n            <SkipPrevious />\r\n          </IconButton>\r\n          {playButton}\r\n          <IconButton onClick={this.stepForward} >\r\n            <SkipNext />\r\n          </IconButton>\r\n          <IconButton />\r\n        </section>\r\n\r\n        <section className=\"controls container-small\">\r\n          <Form\r\n            formLabel=\"Algorithm\"\r\n            values={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\r\n            labels={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\r\n            currentValue={this.state.algorithm}\r\n            onChange={this.changeAlgorithm}\r\n          />\r\n\r\n          <Form\r\n            formLabel=\"Array size\"\r\n            values={[10, 25, 50]}\r\n            labels={['10 items', '25 items', '50 items']}\r\n            currentValue={this.state.barCount}\r\n            onChange={e => this.generateBars(e.target.value)}\r\n          />\r\n\r\n          <Form\r\n            formLabel=\"Speed\"\r\n            values={[128, 64, 32]}\r\n            labels={['1x', '2x', '4x']}\r\n            currentValue={this.state.delay}\r\n            onChange={this.changeDelay}\r\n          />\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}